/*
   Yara Rule Set
   Author: Bastin Julien - Marini Samir
   Date: 2020-05-15
   Identifier: malware-detection-assignment2
*/

/* Rule Set ----------------------------------------------------------------- */

import "pe"

rule Malware_Detection_Evil {
   meta:
      description = "Malware Detection Rule Assignment 2"
      author = "Bastin Julien - Marini Samir"
      date = "2020-05-20"
   strings:
      $s1 = "I am evil!!!" // "I am evil!!!" entirely written

      // "I am evil!!!" divided in multiple strings
      $s2 = "I am"
      $s3 = "evil!!!"
      $s4 = "evil"
      $s5 = "!!!"
      $s6 = "evi"
      $s7 = "l!!!"

      // "I am evil!!!" xor with a hex value between 0x01 and 0xff
      $x1 = "I am evil!!!" xor(0x01-0xff)
      $x2 = "evi" xor(0x01-0xff)
      $x3 = "l!!!" xor(0x01-0xff)
      $x4 = "evil!" xor(0x01-0xff)
      $x5 = "evil!!!" xor(0x01-0xff)

      // "I am evil!!!" in wide ascii character strings
      $w1 = "I am evil!!!" wide ascii
      $w2 = "evi" wide ascii
      $w3 = "l!!!" wide ascii
      $w4 = "evil!" wide ascii
      $w5 = "evil!!!" wide ascii

      //possible function called to print
      $p1 = "/bin/echo"
      $p2 = "/bin"
      $p3 = "/echo"
      $p4 = "/bin/printf"
      $p5 = "/printf"
      $p6 = "printf"
      $p7 = "puts"
   condition:
      ($s1
      or ($s2 and $s3) or (all of ($s2, $s4, $s5)) or (all of ($s2, $s6, $s7))
      or $x1 or ($x2 and $x3) or $x4 or $x5
      or $w1 or ($w2 and $w3) or $w4 or $w5
      and (1 of ($p*))
      )
      and (filesize < 1MB and filesize > 10KB)

}

rule Malware_Detection_Watchdog {
   meta:
      description = "Malware Detection Rule Assignment 2"
      author = "Bastin Julien - Marini Samir"
      date = "2020-05-20"
   strings:
      $s1 = "/tmp/watchdog" // "/tmp/watchdog" entirely written

      // "/tmp/watchdog" divided in multiple strings
      $s2 = "/tmp"
      $s3 = "/watchdog"
      $s4 = "/watch"
      $s5 = "dog"
      $s6 = "tchd"

      // "/tmp/watchdog" xor with a hex value between 0x01 and 0xff
      $x1 = "/tmp" xor(0x01-0xff)
      $x2 = "/watchdog" xor(0x01-0xff)
      $x3 = "watch" xor(0x01-0xff)
      $x4 = "dog" xor(0x01-0xff)
      $x5 = "tchd" xor(0x01-0xff)
      $x6 = "/tmp/watchdog" xor(0x01-0xff)

      // "/tmp/watchdog" in wide ascii character strings
      $w1 = "/tmp" wide ascii
      $w2 = "/watchdog" wide ascii
      $w3 = "watch" wide ascii
      $w4 = "dog" wide ascii
      $w5 = "tchd" wide ascii
      $w6 = "/tmp/watchdog" wide ascii

      //possible function called to delete a file
      $p1 = "remove"
      $p2 = "unlink"
      $p3 = "/bin"
      $p4 = "/bin/rm"
      $p5 = "/rm"
      $p6 = "/bin/unlink"
      $p7 = "/unlink"
   condition:
      ($s1
      or ($s2 and $s3) or (all of ($s2, $s4, $s5)) or ($s2 and $s6)
      or ($x1 and $x2) or ($x3 and $x4) or $x5 or $x6
      or ($w1 and $w2) or ($w3 and $w4) or $w5 or $w6
      and ($p1 or $p2 or ($p3 and $p5) or $p4 or $p6 or ($p3 and $p7))
      )
      and (filesize < 1MB and filesize > 10KB)

}

rule Malware_Detection_Passwd {
  meta:
     description = "Malware Detection Rule Assignment 2"
     author = "Bastin Julien - Marini Samir"
     date = "2020-05-20"
  strings:
     $s1 = "/tmp/passwd" // "/tmp/passwd" entirely written

     // "/tmp/passwd" divided in multiple strings
     $s2 = "/tmp"
     $s3 = "/passwd"
     $s4 = "/pass"
     $s5 = "wd"
     $s6 = "ssw"

     // "/tmp/passwd" xor with a hex value between 0x01 and 0xff
     $x1 = "/tmp" xor(0x01-0xff)
     $x2 = "/passwd" xor(0x01-0xff)
     $x3 = "/pass" xor(0x01-0xff)
     $x4 = "wd" xor(0x01-0xff)
     $x6 = "/tmp/passwd" xor(0x01-0xff)

     // "/tmp/passwd" in wide ascii character strings
     $w1 = "/tmp" wide ascii
     $w2 = "/passwd" wide ascii
     $w3 = "/pass" wide ascii
     $w4 = "wd" wide ascii
     $w6 = "/tmp/passwd" wide ascii

     //possible function called to write to the end of a file
     $p1 = "FILE"
     $p2 = "fopen"
     $p3 = "fprintf"
     $p4 = "fclose"
     $p5 = "fputs"
     $p6 = "fputc"
     $p7 = "/bin"
     $p8 = "/echo"
     $p9 = " >> "
     $p10 = "open"
     $p11 = "write"
     $p12 = "close"
  condition:
     ($s1
     or ($s2 and $s3) or (all of ($s2, $s4, $s5)) or ($s2 and $s6)
     or ($x1 and $x2) or ($x3 and $x4) or $x6
     or ($w1 and $w2) or ($w3 and $w4) or $w6
     and (3 of ($p*))
     )
     and (filesize < 1MB and filesize > 10KB)

}

/* Super Rules ------------------------------------------------------------- */
